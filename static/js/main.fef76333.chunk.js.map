{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","utils/getUserById.ts","utils/generateNewId.ts","components/TodoForm/TodoForm.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","title","completed","cn","TodoList","todos","map","getUserById","users","find","generateNewId","todosArr","idArr","Math","max","TodoForm","onSubmit","useState","setTitle","hasTitleError","setHasTitleError","userId","setUserId","hasUserIdError","setHasUserIdError","action","method","event","preventDefault","trim","htmlFor","type","value","placeholder","onChange","processedValue","target","replace","required","disabled","initialTodos","usersFromServer","App","setTodos","prevTodos","ReactDOM","render","document","getElementById"],"mappings":"6MAAe,GACb,CACEA,GAAI,EACJC,KAAM,gBACNC,SAAU,OACVC,MAAO,qBAET,CACEH,GAAI,EACJC,KAAM,eACNC,SAAU,YACVC,MAAO,qBAET,CACEH,GAAI,EACJC,KAAM,mBACNC,SAAU,WACVC,MAAO,sBAET,CACEH,GAAI,EACJC,KAAM,mBACNC,SAAU,WACVC,MAAO,6BAET,CACEH,GAAI,EACJC,KAAM,mBACNC,SAAU,SACVC,MAAO,4BAET,CACEH,GAAI,EACJC,KAAM,uBACNC,SAAU,mBACVC,MAAO,2BAET,CACEH,GAAI,EACJC,KAAM,kBACNC,SAAU,eACVC,MAAO,0BAET,CACEH,GAAI,EACJC,KAAM,2BACNC,SAAU,gBACVC,MAAO,wBAET,CACEH,GAAI,EACJC,KAAM,kBACNC,SAAU,WACVC,MAAO,2BAET,CACEH,GAAI,GACJC,KAAM,qBACNC,SAAU,iBACVC,MAAO,2B,uBCrDEC,EAA4B,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAClCF,EAAgBE,EAAhBF,MAAOF,EAASI,EAATJ,KAEf,OACE,mBAAGK,UAAU,WAAWC,KAAI,iBAAYJ,GAAxC,SACGF,KCHMO,EAA4B,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAExCT,EAIES,EAJFT,GACAU,EAGED,EAHFC,MAFF,EAKID,EAFFE,iBAHF,SAIEN,EACEI,EADFJ,KAGF,OACE,0BACE,UAASL,EACTM,UAAWM,IAAG,WAAY,CAAE,sBAAuBD,IAFrD,UAIE,oBAAIL,UAAU,kBAAd,SACGI,IAGFL,GACC,cAAC,EAAD,CAAUA,KAAMA,QCnBXQ,EAA4B,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC1C,OACE,yBAASR,UAAU,WAAnB,SACGQ,EAAMC,KAAI,SAAAN,GAAI,OACb,cAAC,EAAD,CAAUA,KAAMA,GAAWA,EAAKT,UCT3BgB,EAAc,SAAChB,EAAYiB,GAAb,OAAgDA,EACxEC,MAAK,SAAAb,GAAI,OAAIA,EAAKL,KAAOA,MCDfmB,EAAgB,SAACC,GAC5B,IAAMC,EAAQD,EAASL,KAAI,SAAAN,GAAI,OAAIA,EAAKT,MAExC,OAAOsB,KAAKC,IAAL,MAAAD,KAAI,YAAQD,IAAS,GCOjBG,EAA4B,SAAC,GAInC,IAHLP,EAGI,EAHJA,MACAQ,EAEI,EAFJA,SACAL,EACI,EADJA,SAEA,EAA0BM,mBAAS,IAAnC,mBAAOhB,EAAP,KAAciB,EAAd,KACA,EAA0CD,oBAAS,GAAnD,mBAAOE,EAAP,KAAsBC,EAAtB,KACA,EAA4BH,mBAAS,GAArC,mBAAOI,EAAP,KAAeC,EAAf,KACA,EAA4CL,oBAAS,GAArD,mBAAOM,EAAP,KAAuBC,EAAvB,KA0CA,OACE,uBACEC,OAAO,aACPC,OAAO,OACPV,SAzBiB,SAACW,GACpBA,EAAMC,iBAENR,GAAkBnB,EAAM4B,QACxBL,GAAmBH,GAEdpB,EAAM4B,QAAWR,IAItBL,EAAS,CACPf,QACAoB,SACAnB,WAAW,EACXN,KAAMW,EAAYc,EAAQb,GAC1BjB,GAAImB,EAAcC,KAnBpBO,EAAS,IACTI,EAAU,KAyBV,UAKE,sBAAKzB,UAAU,QAAf,UACE,wBAAOiC,QAAQ,GAAf,uBAGE,uBACEC,KAAK,OACL,UAAQ,aACRC,MAAO/B,EACPgC,YAAY,gBACZC,SAvDgB,SAACP,GACzB,IAAIQ,EAAiBR,EAAMS,OAAOJ,MAElCG,EAAiBA,EAAeE,QAAQ,4CAAyB,IAEjEnB,EAASiB,GACTf,GAAiB,SAoDZD,GACC,sBAAMtB,UAAU,QAAhB,qCAIJ,sBAAKA,UAAU,QAAf,UACE,wBAAOiC,QAAQ,GAAf,sBAGE,yBACE,UAAQ,aACRQ,UAAQ,EACRN,MAAOX,EACPa,SA9De,SAACP,GACxBL,GAAWK,EAAMS,OAAOJ,OACxBR,GAAkB,IAwDZ,UAME,wBAAQQ,MAAM,IAAIO,UAAQ,EAA1B,2BACC/B,EAAMF,KAAI,SAAAV,GAAI,OACb,wBAEEoC,MAAOpC,EAAKL,GAFd,SAIGK,EAAKJ,MAHDI,EAAKL,aAQjBgC,GACC,sBAAM1B,UAAU,QAAhB,qCAIJ,wBACEkC,KAAK,SACL,UAAQ,eAFV,qBCtGAS,G,MCTS,CACb,CACEjD,GAAI,EACJU,MAAO,qBACPC,WAAW,EACXmB,OAAQ,GAEV,CACE9B,GAAI,GACJU,MAAO,kBACPC,WAAW,EACXmB,OAAQ,GAEV,CACE9B,GAAI,EACJU,MAAO,qCACPC,WAAW,EACXmB,OAAQ,IDRyBf,KAAI,SAAAN,GACvC,OAAO,2BACFA,GADL,IAEEJ,KAAMW,EAAYP,EAAKqB,OAAQoB,SAItBC,EAAe,WAC1B,MAA0BzB,mBAAgBuB,GAA1C,mBAAOnC,EAAP,KAAcsC,EAAd,KAYA,OACE,sBAAK9C,UAAU,MAAf,UACE,+CACA,cAAC,EAAD,CACEW,MAAOiC,EACPzB,SAfU,SAAChB,GACf2C,GAAS,SAACC,GACR,MAAM,GAAN,mBACKA,GADL,gBAEO5C,SAYLW,SAAUN,IAEZ,cAAC,EAAD,CAAUA,MAAOA,QElCvBwC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.fef76333.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { User } from '../../types/User';\n\ninterface Props {\n  user: User\n}\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { email, name } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import cn from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ninterface Props {\n  todo: Todo\n}\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    title,\n    completed = true,\n    user,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={cn('TodoInfo', { 'TodoInfo--completed': completed })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && (\n        <UserInfo user={user} />\n      )}\n    </article>\n  );\n};\n","import { Todos } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ninterface Props {\n  todos: Todos\n}\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo todo={todo} key={todo.id} />\n      ))}\n    </section>\n  );\n};\n","import { User, Users } from '../types/User';\n\nexport const getUserById = (id: number, users: Users): User | undefined => users\n  .find(user => user.id === id);\n","import { Todos } from '../types/Todo';\n\nexport const generateNewId = (todosArr: Todos): number => {\n  const idArr = todosArr.map(todo => todo.id);\n\n  return Math.max(...idArr) + 1;\n};\n","import React, { useState } from 'react';\nimport { Users } from '../../types/User';\nimport { Todo, Todos } from '../../types/Todo';\nimport { getUserById } from '../../utils/getUserById';\nimport { generateNewId } from '../../utils/generateNewId';\n\ninterface Props {\n  users: Users\n  onSubmit: (todo: Todo) => void\n  todosArr: Todos\n}\n\nexport const TodoForm: React.FC<Props> = ({\n  users,\n  onSubmit,\n  todosArr,\n}) => {\n  const [title, setTitle] = useState('');\n  const [hasTitleError, setHasTitleError] = useState(false);\n  const [userId, setUserId] = useState(0);\n  const [hasUserIdError, setHasUserIdError] = useState(false);\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    let processedValue = event.target.value;\n\n    processedValue = processedValue.replace(/[^a-zA-Zа-яА-Я0-9\\s]/g, '');\n\n    setTitle(processedValue);\n    setHasTitleError(false);\n  };\n\n  const handleUserChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserId(+event.target.value);\n    setHasUserIdError(false);\n  };\n\n  const resetForm = () => {\n    setTitle('');\n    setUserId(0);\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    setHasTitleError(!title.trim());\n    setHasUserIdError(!userId);\n\n    if (!title.trim() || !userId) {\n      return;\n    }\n\n    onSubmit({\n      title,\n      userId,\n      completed: false,\n      user: getUserById(userId, users),\n      id: generateNewId(todosArr),\n    });\n\n    resetForm();\n  };\n\n  return (\n    <form\n      action=\"/api/todos\"\n      method=\"POST\"\n      onSubmit={handleSubmit}\n    >\n      <div className=\"field\">\n        <label htmlFor=\"\">\n          Title:&nbsp;\n\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            value={title}\n            placeholder=\"Enter a title\"\n            onChange={handleTitleChange}\n          />\n        </label>\n        {hasTitleError && (\n          <span className=\"error\">Please enter a title</span>\n        )}\n      </div>\n\n      <div className=\"field\">\n        <label htmlFor=\"\">\n          User:&nbsp;\n\n          <select\n            data-cy=\"userSelect\"\n            required\n            value={userId}\n            onChange={handleUserChange}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n            {users.map(user => (\n              <option\n                key={user.id}\n                value={user.id}\n              >\n                {user.name}\n              </option>\n            ))}\n          </select>\n        </label>\n        {hasUserIdError && (\n          <span className=\"error\">Please choose a user</span>\n        )}\n      </div>\n\n      <button\n        type=\"submit\"\n        data-cy=\"submitButton\"\n      >\n        Add\n      </button>\n    </form>\n  );\n};\n","import { useState } from 'react';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList';\nimport { TodoForm } from './components/TodoForm';\nimport { Todo, Todos } from './types/Todo';\nimport { getUserById } from './utils/getUserById';\nimport './App.scss';\n\nconst initialTodos = todosFromServer.map(todo => {\n  return {\n    ...todo,\n    user: getUserById(todo.userId, usersFromServer),\n  };\n});\n\nexport const App:React.FC = () => {\n  const [todos, setTodos] = useState<Todos>(initialTodos);\n\n  const addTodo = (todo: Todo): void => {\n    setTodos((prevTodos) => {\n      return [\n        ...prevTodos, {\n          ...todo,\n        },\n      ];\n    });\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n      <TodoForm\n        users={usersFromServer}\n        onSubmit={addTodo}\n        todosArr={todos}\n      />\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}